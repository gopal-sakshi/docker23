services:

# docker-compose.yml ====> configure nginx 
  # ===> to serve two Angular APPs
  # ===> run nodeJs backed API
  # all on single host ===> no more CORS errors
  # that ip will be localhost (or) 10.0.54.240

# NGINX
  nginx:
    image: nginx
    container_name: nginx23
    ports:
      - 42457:6001    # so, on the host machine, I'll listen on 42457 & 42458 ports
      - 42458:6002
    restart: always
    volumes:
      - /home/gsakshi/Desktop/docker23/twoUIApps/dockerUI13/demo33:/demo44
      - /home/gsakshi/Desktop/docker23/twoUIApps/node12/config23/nginx_kpt.conf:/etc/nginx/nginx.conf

  node23:
    restart: on-failure
    build:
      context: .
      dockerfile: ./node12/node14.dockerfile
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: 10m
    #     max-file: "3"
    #     labels: "label23"
    #     env: "os23"

    # logging:
    #   driver: syslog
    #   options:
    #     syslog-address: "tcp://:601"
    #     syslog-format: "rfc3164"
    #     tag: "node23_logs"
    depends_on:
      - postgres
    # environment:
    #   DATABASE_URL: postgres://user44:1258@postgres:5432/db87
    #   NODE_ENV: development
    ports:
      - "42060:42060"
    # command: npm run dev40

  postgres44:
    image: postgres
    ports:
      - "35432:5432"
    environment:
      POSTGRES_USER: user44
      
      # if you use this ---> db password will be "/run/secrets/passwd23"
      # POSTGRES_PASSWORD: /run/secrets/passwd23

      # give passwords from a file
      # POSTGRES_PASSWORD_FILE: /run/secrets/passwd23

      # use default password
      POSTGRES_PASSWORD: 1258
      # https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAMDBAuth.html

      POSTGRES_DB: db87
    volumes:
      - ~/Desktop/docker23/dockervol23/pgDataLevel2:/var/lib/postgresql/data
    secrets:
      - passwd23

secrets:
  passwd23:
    file: secret23.txt